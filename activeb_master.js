// Generated by CoffeeScript 1.7.1
(function() {
  var getOrder, getSession, getSubject, _;

  _ = Psy._;

  this.Active_Brain = {};

  window.orderSet = {
    1: [[1, 2, 3, 4], [2, 1, 4, 3], [3, 4, 1, 2], [4, 3, 2, 1]],
    2: [[2, 1, 4, 3], [3, 4, 1, 2], [4, 3, 2, 1], [1, 2, 3, 4]],
    3: [[3, 4, 1, 2], [4, 3, 2, 1], [1, 2, 3, 4], [2, 1, 4, 3]],
    4: [[4, 3, 2, 1], [1, 2, 3, 4], [2, 1, 4, 3], [3, 4, 1, 2]]
  };

  getOrder = function(index) {
    return window.orderSet[(index + 1).toString()];
  };

  getSession = function() {
    return $.getJSON("/session");
  };

  getSubject = function() {
    return $.getJSON("/subject");
  };

  Active_Brain.teststart = (function(_this) {
    return function() {
      var ind, order, session, subject, taskSet, tasks;
      subject = 100;
      session = 4;
      tasks = [AST, ArrowFlanker, TrailsB, RAT];
      order = getOrder(subject % 4)[session - 1];
      taskSet = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = order.length; _i < _len; _i++) {
          ind = order[_i];
          _results.push(tasks[ind - 1]);
        }
        return _results;
      })();
      return Start.start(1, 1).then(function() {
        return taskSet[0].start(1, 1);
      }).then(function() {
        return taskSet[1].start(1, 1);
      }).then(function() {
        return taskSet[2].start(1, 1);
      }).then(function() {
        return taskSet[3].start(1, 1);
      }).then(function() {
        return Done.start(1, 1);
      });
    };
  })(this);

  Active_Brain.start = (function(_this) {
    return function() {
      return getSession().then(function(session) {
        window._session = Number(session.data.ID);
        return getSubject();
      }).then(function(subject) {
        var ind, order, orderIndex, taskSet;
        window._subject = subject.data.ID;
        orderIndex = window._subject % 4;
        order = getOrder(orderIndex)[window._session - 1];
        taskSet = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = order.length; _i < _len; _i++) {
            ind = order[_i];
            _results.push(tasks[ind - 1]);
          }
          return _results;
        })();
        return Start.start(window._session, window._subject).then(function() {
          return taskSet[0].start(window._session, window._subject);
        }).then(function() {
          return taskSet[1].start(window._session, window._subject);
        }).then(function() {
          return taskSet[2].start(window._session, window._subject);
        }).then(function() {
          return taskSet[3].start(window._session, window._subject);
        }).then(function() {
          return Done.start.start(window._session, window._subject);
        });
      });
    };
  })(this);

}).call(this);
